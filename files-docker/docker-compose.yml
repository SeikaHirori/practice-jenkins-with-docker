version: '3.8'

# Comments meant to show equalivance to running commands in terminal with "Docker run"

services:

  dind-docker:
    # docker run [-flags] docker:dind
    image: docker:dind
    networks:
      # --network jenkins 
      jenkins:
        
        # --network-alias
        aliases:
          - docker
    
    environment:
    # --env DOCKER_TLS_CERTDIR=/certs 
      DOCKER_TLS_CERTDIR: /certs
    
    volumes:
      # --volume jenkins-docker-certs:/certs/client
      - jenkins_docker_certs:/certs/client
      # --volume jenkins-data:/var/jenkins_home
      - jenkins_data:/var/jenkins_home
    
    ports:
      # --publish 2376:2376
      - 2376:2376

    # --name dind-docker
    container_name: dind-docker

    # --privileged
    privileged: true

    # --storage-driver overlay2
    command: ["--storage-driver=overlay2"]

    # Commands not need: ['--rm', '--detach']
      ## Not using '--rm' as I want to keep it around. Running 'docker-compose down' will remove all containers anyways
      ## '--detach'/'-d' can be used with docker-compose
        ### Example: 'docker-compose up -d'

  # TODO
  jenkins-docker:
    # Using Dockerfile that's located in a sub-directory
    build: ./dockerfile-jenkins

    networks:
      # --network jenkins
      - jenkins

    ports:
      # --publish 8080:8080
      - "8001:8080"
      # --publish 50000:50000
      - "50000:50000"

    environment:

      # --env DOCKER_HOST=tcp://docker:2376
      DOCKER_HOST: tcp://docker:2376

      # --env DOCKER_CERT_PATH=/certs/client
      DOCKER_CERT_PATH: /certs/client
      
      # --env DOCKER_TLS_VERIFY=1
      DOCKER_TLS_VERIFY: 1
    
    volumes:

      # --volume jenkins-data:/var/jenkins_home
      - jenkins_data:/var/jenkins_home

      # --volume jenkins-docker-certs:/certs/client:ro
      - jenkins_docker_certs:/certs/client:ro

    # --name jenkins-blueocean
    container_name: myjenkins-blueocean
    
    # --restart=on-failure 
    restart: on-failure

    ## privileged might not be needed here; test later #TODO
    #privileged: true  
  

volumes:
  jenkins_data:
  jenkins_docker_certs:
    

networks:
  jenkins:
    external: true
